/**
 * @author generated by eTrice
 *
 * Header File of ProtocolClass fire
 * 
 */

#ifndef _TEMPLATEMODEL_FIRE_H_
#define _TEMPLATEMODEL_FIRE_H_

#include "etDatatypes.h"
#include "modelbase/etPort.h"


/* include all referenced room classes */


/* message IDs */
enum fire_msg_ids {
	fire_MSG_MIN = 0,
	fire_IN_fire = 1,
	fire_MSG_MAX = 2
};

/*--------------------- port structs and methods */
typedef etPort firePort;
typedef etReplPort fireReplPort;




etInt32 fireReplPort_getReplication(const fireReplPort* self);
typedef etPort fireConjPort;
typedef etReplPort fireConjReplPort;


void fireConjPort_fire(const fireConjPort* self, float32 data);
void fireConjReplPort_fire_broadcast(const fireConjReplPort* self, float32 data);
void fireConjReplPort_fire(const fireConjReplPort* self, int idx, float32 data);


etInt32 fireConjReplPort_getReplication(const fireConjReplPort* self);

/*--------------------- debug helpers */

/* get message string for message id */
#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	const char* fire_getMessageString(int msg_id);
#endif


#endif /* _TEMPLATEMODEL_FIRE_H_ */

