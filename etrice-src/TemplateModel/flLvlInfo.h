/**
 * @author generated by eTrice
 *
 * Header File of ProtocolClass flLvlInfo
 * 
 */

#ifndef _TEMPLATEMODEL_FLLVLINFO_H_
#define _TEMPLATEMODEL_FLLVLINFO_H_

#include "etDatatypes.h"
#include "modelbase/etPort.h"


/* include all referenced room classes */


/* message IDs */
enum flLvlInfo_msg_ids {
	flLvlInfo_MSG_MIN = 0,
	flLvlInfo_IN_value = 1,
	flLvlInfo_MSG_MAX = 2
};

/*--------------------- port structs and methods */
typedef etPort flLvlInfoPort;
typedef etReplPort flLvlInfoReplPort;




etInt32 flLvlInfoReplPort_getReplication(const flLvlInfoReplPort* self);
typedef etPort flLvlInfoConjPort;
typedef etReplPort flLvlInfoConjReplPort;


void flLvlInfoConjPort_value(const flLvlInfoConjPort* self, float32 data);
void flLvlInfoConjReplPort_value_broadcast(const flLvlInfoConjReplPort* self, float32 data);
void flLvlInfoConjReplPort_value(const flLvlInfoConjReplPort* self, int idx, float32 data);


etInt32 flLvlInfoConjReplPort_getReplication(const flLvlInfoConjReplPort* self);

/*--------------------- debug helpers */

/* get message string for message id */
#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	const char* flLvlInfo_getMessageString(int msg_id);
#endif


#endif /* _TEMPLATEMODEL_FLLVLINFO_H_ */

