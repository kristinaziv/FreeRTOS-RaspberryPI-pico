/**
 * @author generated by eTrice
 *
 * Instance File of Node node with SubSystem subSystemRef
 * - instantiation of all actor instances and port instances
 * - configuration of data and connection of ports
 */

#include "messaging/etMessageService.h"

/* include all referenced room classes */
#include "TemplateModel/CheckIfLaunchingMissileData.h"
#include "TemplateModel/FireMissile.h"
#include "TemplateModel/NotifyOperatorTempCmd.h"
#include "TemplateModel/NotifyOperatorWLCmd.h"
#include "TemplateModel/TempActor.h"
#include "TemplateModel/TopActor.h"
#include "TemplateModel/UwbSensorMissileData.h"
#include "TemplateModel/WaterLevelActor.h"
#include "etrice/api/timer/ATimerService.h"

/* instantiation of message services and message buffers */
/* DefaultPhysicalThread */
#define DEFAULTPHYSICALTHREAD_POOL_SIZE		100
#define DEFAULTPHYSICALTHREAD_BLOCK_SIZE	64
static uint8 msgBuffer_DefaultPhysicalThread[DEFAULTPHYSICALTHREAD_POOL_SIZE * DEFAULTPHYSICALTHREAD_BLOCK_SIZE];
static etMessageService msgService_DefaultPhysicalThread;

/* declarations of all ActorClass instances (const and variable structs) */

/* forward declaration of variable actor structs */
ET_FOWARD_DECLARATION_OF_INST_VAR TopActor _LogSys_subSystemRef_topActor;
ET_FOWARD_DECLARATION_OF_INST_VAR TempActor _LogSys_subSystemRef_topActor_tempSensor;
ET_FOWARD_DECLARATION_OF_INST_VAR WaterLevelActor _LogSys_subSystemRef_topActor_fuelLvlSensor;
ET_FOWARD_DECLARATION_OF_INST_VAR NotifyOperatorWLCmd _LogSys_subSystemRef_topActor_fuelLevelControler;
ET_FOWARD_DECLARATION_OF_INST_VAR UwbSensorMissileData _LogSys_subSystemRef_topActor_missilePositionReceiver;
ET_FOWARD_DECLARATION_OF_INST_VAR NotifyOperatorTempCmd _LogSys_subSystemRef_topActor_tempLevelController;
ET_FOWARD_DECLARATION_OF_INST_VAR FireMissile _LogSys_subSystemRef_topActor_fireMissile;
ET_FOWARD_DECLARATION_OF_INST_VAR CheckIfLaunchingMissileData _LogSys_subSystemRef_topActor_calculateIfLaunching;
ET_FOWARD_DECLARATION_OF_INST_VAR ATimerService _LogSys_subSystemRef_timingService;

/* forward declaration of variable port structs */
/* nothing to do */
ET_FOWARD_DECLARATION_OF_INST_VAR PTimerConjPort_var _LogSys_subSystemRef_topActor_tempSensor_timer_var={
	0		/* status */,
	0		/* currentTimeId */
};
ET_FOWARD_DECLARATION_OF_INST_VAR PTimerConjPort_var _LogSys_subSystemRef_topActor_fuelLvlSensor_timer_var={
	0		/* status */,
	0		/* currentTimeId */
};
ET_FOWARD_DECLARATION_OF_INST_VAR PTimerConjPort_var _LogSys_subSystemRef_topActor_missilePositionReceiver_timer_var={
	0		/* status */,
	0		/* currentTimeId */
};
ET_FOWARD_DECLARATION_OF_INST_VAR PTimerConjPort_var _LogSys_subSystemRef_topActor_fireMissile_timer_var={
	0		/* status */,
	0		/* currentTimeId */
};
ET_FOWARD_DECLARATION_OF_INST_VAR PTimerConjPort_var _LogSys_subSystemRef_topActor_calculateIfLaunching_timer_var={
	0		/* status */,
	0		/* currentTimeId */
};
ET_FOWARD_DECLARATION_OF_INST_VAR PTimerPort_var _LogSys_subSystemRef_timingService_timer_var[5]={
	{{{0,0},{0,0},0,0U,NULL}		/* tcb */
	}, 
	{{{0,0},{0,0},0,0U,NULL}		/* tcb */
	}, 
	{{{0,0},{0,0},0,0U,NULL}		/* tcb */
	}, 
	{{{0,0},{0,0},0,0U,NULL}		/* tcb */
	}, 
	{{{0,0},{0,0},0,0U,NULL}		/* tcb */
	}
};


/* instance _LogSys_subSystemRef_topActor */
ET_INITIALIZATION_OF_INST_VAR const TopActor_const _LogSys_subSystemRef_topActor_const = {
	#ifdef ET_MSC_LOGGER_ACTIVATE
		"/LogSys/subSystemRef/topActor"
	#endif
	
	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */

	/* data receive ports */

	/* saps */

	/* replicated ports */

	/* services */
};
ET_INITIALIZATION_OF_INST_VAR TopActor _LogSys_subSystemRef_topActor = {
	&_LogSys_subSystemRef_topActor_const,

	/* data send ports */

	/* attributes */

	/* state and history are initialized in init function */
};

/* instance _LogSys_subSystemRef_topActor_tempSensor */
ET_INITIALIZATION_OF_INST_VAR const TempActor_const _LogSys_subSystemRef_topActor_tempSensor_const = {
	#ifdef ET_MSC_LOGGER_ACTIVATE
		"/LogSys/subSystemRef/topActor/tempSensor",
	#endif
	
	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */
	{NULL, &msgService_DefaultPhysicalThread, 15+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	, "/LogSys/subSystemRef/topActor/tempSensor", "/LogSys/subSystemRef/topActor/tempLevelController"
	#endif
	} /* Port sendTempLevel */

	/* data receive ports */

	/* saps */
	,{&_LogSys_subSystemRef_topActor_tempSensor_timer_var, &msgService_DefaultPhysicalThread, 25+BASE_ADDRESS, 2
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	, "/LogSys/subSystemRef/topActor/tempSensor", "/LogSys/subSystemRef/timingService"
	#endif
	} /* Port timer */

	/* replicated ports */

	/* services */
};
ET_INITIALIZATION_OF_INST_VAR TempActor _LogSys_subSystemRef_topActor_tempSensor = {
	&_LogSys_subSystemRef_topActor_tempSensor_const,

	/* data send ports */

	/* attributes */

	/* state and history are initialized in init function */
};

/* instance _LogSys_subSystemRef_topActor_fuelLvlSensor */
ET_INITIALIZATION_OF_INST_VAR const WaterLevelActor_const _LogSys_subSystemRef_topActor_fuelLvlSensor_const = {
	#ifdef ET_MSC_LOGGER_ACTIVATE
		"/LogSys/subSystemRef/topActor/fuelLvlSensor",
	#endif
	
	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */
	{NULL, &msgService_DefaultPhysicalThread, 9+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	, "/LogSys/subSystemRef/topActor/fuelLvlSensor", "/LogSys/subSystemRef/topActor/fuelLevelControler"
	#endif
	} /* Port sendFluelLevel */

	/* data receive ports */

	/* saps */
	,{&_LogSys_subSystemRef_topActor_fuelLvlSensor_timer_var, &msgService_DefaultPhysicalThread, 26+BASE_ADDRESS, 2
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	, "/LogSys/subSystemRef/topActor/fuelLvlSensor", "/LogSys/subSystemRef/timingService"
	#endif
	} /* Port timer */

	/* replicated ports */

	/* services */
};
ET_INITIALIZATION_OF_INST_VAR WaterLevelActor _LogSys_subSystemRef_topActor_fuelLvlSensor = {
	&_LogSys_subSystemRef_topActor_fuelLvlSensor_const,

	/* data send ports */

	/* attributes */

	/* state and history are initialized in init function */
};

/* instance _LogSys_subSystemRef_topActor_fuelLevelControler */
ET_INITIALIZATION_OF_INST_VAR const NotifyOperatorWLCmd_const _LogSys_subSystemRef_topActor_fuelLevelControler_const = {
	#ifdef ET_MSC_LOGGER_ACTIVATE
		"/LogSys/subSystemRef/topActor/fuelLevelControler",
	#endif
	
	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */
	{NULL, &msgService_DefaultPhysicalThread, 6+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	, "/LogSys/subSystemRef/topActor/fuelLevelControler", "/LogSys/subSystemRef/topActor/fuelLvlSensor"
	#endif
	} /* Port receiveWLLevel */
	,{NULL, &msgService_DefaultPhysicalThread, 18+BASE_ADDRESS, 2
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	, "/LogSys/subSystemRef/topActor/fuelLevelControler", "/LogSys/subSystemRef/topActor/fireMissile"
	#endif
	} /* Port sendCritical */

	/* data receive ports */

	/* saps */

	/* replicated ports */

	/* services */
};
ET_INITIALIZATION_OF_INST_VAR NotifyOperatorWLCmd _LogSys_subSystemRef_topActor_fuelLevelControler = {
	&_LogSys_subSystemRef_topActor_fuelLevelControler_const,

	/* data send ports */

	/* attributes */
	0		/* criticalCount */,
	0		/* threshold */,
	0		/* wltreshold */,
	false		/* okreported */,
	false		/* criticalReportedWl */

	/* state and history are initialized in init function */
};

/* instance _LogSys_subSystemRef_topActor_missilePositionReceiver */
ET_INITIALIZATION_OF_INST_VAR const UwbSensorMissileData_const _LogSys_subSystemRef_topActor_missilePositionReceiver_const = {
	#ifdef ET_MSC_LOGGER_ACTIVATE
		"/LogSys/subSystemRef/topActor/missilePositionReceiver",
	#endif
	
	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */
	{NULL, &msgService_DefaultPhysicalThread, 22+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	, "/LogSys/subSystemRef/topActor/missilePositionReceiver", "/LogSys/subSystemRef/topActor/calculateIfLaunching"
	#endif
	} /* Port sendDistance */

	/* data receive ports */

	/* saps */
	,{&_LogSys_subSystemRef_topActor_missilePositionReceiver_timer_var, &msgService_DefaultPhysicalThread, 27+BASE_ADDRESS, 2
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	, "/LogSys/subSystemRef/topActor/missilePositionReceiver", "/LogSys/subSystemRef/timingService"
	#endif
	} /* Port timer */

	/* replicated ports */

	/* services */
};
ET_INITIALIZATION_OF_INST_VAR UwbSensorMissileData _LogSys_subSystemRef_topActor_missilePositionReceiver = {
	&_LogSys_subSystemRef_topActor_missilePositionReceiver_const,

	/* data send ports */

	/* attributes */

	/* state and history are initialized in init function */
};

/* instance _LogSys_subSystemRef_topActor_tempLevelController */
ET_INITIALIZATION_OF_INST_VAR const NotifyOperatorTempCmd_const _LogSys_subSystemRef_topActor_tempLevelController_const = {
	#ifdef ET_MSC_LOGGER_ACTIVATE
		"/LogSys/subSystemRef/topActor/tempLevelController",
	#endif
	
	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */
	{NULL, &msgService_DefaultPhysicalThread, 3+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	, "/LogSys/subSystemRef/topActor/tempLevelController", "/LogSys/subSystemRef/topActor/tempSensor"
	#endif
	} /* Port receiveTempLevel */

	/* data receive ports */

	/* saps */

	/* replicated ports */

	/* services */
};
ET_INITIALIZATION_OF_INST_VAR NotifyOperatorTempCmd _LogSys_subSystemRef_topActor_tempLevelController = {
	&_LogSys_subSystemRef_topActor_tempLevelController_const,

	/* data send ports */

	/* attributes */
	0		/* criticalCnt */,
	0		/* threshold */,
	0		/* LED_PIN */,
	0		/* tempTreshold */,
	false		/* okreported */,
	false		/* criticalReportedTmp */

	/* state and history are initialized in init function */
};

/* instance _LogSys_subSystemRef_topActor_fireMissile */
ET_INITIALIZATION_OF_INST_VAR const FireMissile_const _LogSys_subSystemRef_topActor_fireMissile_const = {
	#ifdef ET_MSC_LOGGER_ACTIVATE
		"/LogSys/subSystemRef/topActor/fireMissile",
	#endif
	
	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */
	{NULL, &msgService_DefaultPhysicalThread, 21+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	, "/LogSys/subSystemRef/topActor/fireMissile", "/LogSys/subSystemRef/topActor/calculateIfLaunching"
	#endif
	} /* Port receiveFireCmd */
	,{NULL, &msgService_DefaultPhysicalThread, 10+BASE_ADDRESS, 2
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	, "/LogSys/subSystemRef/topActor/fireMissile", "/LogSys/subSystemRef/topActor/fuelLevelControler"
	#endif
	} /* Port receiveCrititcalInfo */

	/* data receive ports */

	/* saps */
	,{&_LogSys_subSystemRef_topActor_fireMissile_timer_var, &msgService_DefaultPhysicalThread, 28+BASE_ADDRESS, 3
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	, "/LogSys/subSystemRef/topActor/fireMissile", "/LogSys/subSystemRef/timingService"
	#endif
	} /* Port timer */

	/* replicated ports */

	/* services */
};
ET_INITIALIZATION_OF_INST_VAR FireMissile _LogSys_subSystemRef_topActor_fireMissile = {
	&_LogSys_subSystemRef_topActor_fireMissile_const,

	/* data send ports */

	/* attributes */
	false		/* criticalReportedWl */

	/* state and history are initialized in init function */
};

/* instance _LogSys_subSystemRef_topActor_calculateIfLaunching */
ET_INITIALIZATION_OF_INST_VAR const CheckIfLaunchingMissileData_const _LogSys_subSystemRef_topActor_calculateIfLaunching_const = {
	#ifdef ET_MSC_LOGGER_ACTIVATE
		"/LogSys/subSystemRef/topActor/calculateIfLaunching",
	#endif
	
	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */
	{NULL, &msgService_DefaultPhysicalThread, 17+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	, "/LogSys/subSystemRef/topActor/calculateIfLaunching", "/LogSys/subSystemRef/topActor/fireMissile"
	#endif
	} /* Port sendFireCmd */
	,{NULL, &msgService_DefaultPhysicalThread, 12+BASE_ADDRESS, 2
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	, "/LogSys/subSystemRef/topActor/calculateIfLaunching", "/LogSys/subSystemRef/topActor/missilePositionReceiver"
	#endif
	} /* Port receiveDistance */

	/* data receive ports */

	/* saps */
	,{&_LogSys_subSystemRef_topActor_calculateIfLaunching_timer_var, &msgService_DefaultPhysicalThread, 29+BASE_ADDRESS, 3
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	, "/LogSys/subSystemRef/topActor/calculateIfLaunching", "/LogSys/subSystemRef/timingService"
	#endif
	} /* Port timer */

	/* replicated ports */

	/* services */
};
ET_INITIALIZATION_OF_INST_VAR CheckIfLaunchingMissileData _LogSys_subSystemRef_topActor_calculateIfLaunching = {
	&_LogSys_subSystemRef_topActor_calculateIfLaunching_const,

	/* data send ports */

	/* attributes */
	0		/* N */,
	0		/* sequenceOfCriticals */

	/* state and history are initialized in init function */
};

/* instance _LogSys_subSystemRef_timingService */
ET_INITIALIZATION_OF_INST_VAR const etReplSubPort _LogSys_subSystemRef_timingService_repl_sub_ports[5] = {
	/* Replicated Sub Ports: {varData, msgService, peerAddress, localId, index} */
	{{&_LogSys_subSystemRef_timingService_timer_var[0], &msgService_DefaultPhysicalThread, 4+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	, "/LogSys/subSystemRef/timingService", "/LogSys/subSystemRef/topActor/tempSensor"
	#endif
	}, 0 } /* Repl Sub Port timer idx 0 */
	,{{&_LogSys_subSystemRef_timingService_timer_var[1], &msgService_DefaultPhysicalThread, 7+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	, "/LogSys/subSystemRef/timingService", "/LogSys/subSystemRef/topActor/fuelLvlSensor"
	#endif
	}, 1 } /* Repl Sub Port timer idx 1 */
	,{{&_LogSys_subSystemRef_timingService_timer_var[2], &msgService_DefaultPhysicalThread, 13+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	, "/LogSys/subSystemRef/timingService", "/LogSys/subSystemRef/topActor/missilePositionReceiver"
	#endif
	}, 2 } /* Repl Sub Port timer idx 2 */
	,{{&_LogSys_subSystemRef_timingService_timer_var[3], &msgService_DefaultPhysicalThread, 19+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	, "/LogSys/subSystemRef/timingService", "/LogSys/subSystemRef/topActor/fireMissile"
	#endif
	}, 3 } /* Repl Sub Port timer idx 3 */
	,{{&_LogSys_subSystemRef_timingService_timer_var[4], &msgService_DefaultPhysicalThread, 23+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	, "/LogSys/subSystemRef/timingService", "/LogSys/subSystemRef/topActor/calculateIfLaunching"
	#endif
	}, 4 } /* Repl Sub Port timer idx 4 */
};
ET_INITIALIZATION_OF_INST_VAR const ATimerService_const _LogSys_subSystemRef_timingService_const = {
	#ifdef ET_MSC_LOGGER_ACTIVATE
		"/LogSys/subSystemRef/timingService",
	#endif
	
	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */

	/* data receive ports */

	/* saps */

	/* replicated ports */

	/* services */
	{5, _LogSys_subSystemRef_timingService_repl_sub_ports+0}
	,{0, _LogSys_subSystemRef_timingService_repl_sub_ports+5}
};
ET_INITIALIZATION_OF_INST_VAR ATimerService _LogSys_subSystemRef_timingService = {
	&_LogSys_subSystemRef_timingService_const,

	/* data send ports */

	/* attributes */
	NULL		/* usedTcbsRoot */,
	{0,0}		/* timerDeviationHighWaterMark */

	/* state and history are initialized in init function */
};

/* special user codes from annotation SubSystemUserCode */
