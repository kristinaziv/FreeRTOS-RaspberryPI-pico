/**
 * @author generated by eTrice
 *
 * Header File of ProtocolClass tempLvlInfo
 * 
 */

#ifndef _TEMPLATEMODEL_TEMPLVLINFO_H_
#define _TEMPLATEMODEL_TEMPLVLINFO_H_

#include "etDatatypes.h"
#include "modelbase/etPort.h"


/* include all referenced room classes */


/* message IDs */
enum tempLvlInfo_msg_ids {
	tempLvlInfo_MSG_MIN = 0,
	tempLvlInfo_IN_value = 1,
	tempLvlInfo_MSG_MAX = 2
};

/*--------------------- port structs and methods */
typedef etPort tempLvlInfoPort;
typedef etReplPort tempLvlInfoReplPort;




etInt32 tempLvlInfoReplPort_getReplication(const tempLvlInfoReplPort* self);
typedef etPort tempLvlInfoConjPort;
typedef etReplPort tempLvlInfoConjReplPort;


void tempLvlInfoConjPort_value(const tempLvlInfoConjPort* self, int32 data);
void tempLvlInfoConjReplPort_value_broadcast(const tempLvlInfoConjReplPort* self, int32 data);
void tempLvlInfoConjReplPort_value(const tempLvlInfoConjReplPort* self, int idx, int32 data);


etInt32 tempLvlInfoConjReplPort_getReplication(const tempLvlInfoConjReplPort* self);

/*--------------------- debug helpers */

/* get message string for message id */
#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	const char* tempLvlInfo_getMessageString(int msg_id);
#endif


#endif /* _TEMPLATEMODEL_TEMPLVLINFO_H_ */

