/**
 * @author generated by eTrice
 *
 * Header File of ProtocolClass PLogger
 * 
 */

#ifndef _ETRICE_API_LOGGER_PLOGGER_H_
#define _ETRICE_API_LOGGER_PLOGGER_H_

#include "etDatatypes.h"
#include "modelbase/etPort.h"


/* include all referenced room classes */


/* message IDs */
enum PLogger_msg_ids {
	PLogger_MSG_MIN = 0,
	PLogger_MSG_MAX = 1
};

/*--------------------- port structs and methods */
typedef etPort PLoggerPort;
typedef etReplPort PLoggerReplPort;




etInt32 PLoggerReplPort_getReplication(const PLoggerReplPort* self);
typedef etPort PLoggerConjPort;
typedef etReplPort PLoggerConjReplPort;



/*--------------------- operations ---------------------*/
 void PLoggerConjPort_log(PLoggerConjPort* self, char* message);
 void PLoggerConjPort_logF(PLoggerConjPort* self, char* format, ...);

etInt32 PLoggerConjReplPort_getReplication(const PLoggerConjReplPort* self);

/*--------------------- debug helpers */

/* get message string for message id */
#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	const char* PLogger_getMessageString(int msg_id);
#endif


#endif /* _ETRICE_API_LOGGER_PLOGGER_H_ */

