/**
 * @author generated by eTrice
 *
 * Header File of ActorClass ATimerService
 *
 */

#ifndef _ETRICE_API_TIMER_ATIMERSERVICE_H_
#define _ETRICE_API_TIMER_ATIMERSERVICE_H_

#include "modelbase/etActor.h"

/* include all referenced room classes */
#include "etrice/api/timer/DStartTimer.h"
#include "etrice/api/timer/PTimer.h"
#include "etrice/api/timer/PTimerSupervisionControl.h"

/*--------------------- begin user code ---------------------*/
#include "osal/etTime.h" 
#include "helpers/etTimeHelpers.h"

/*--------------------- end user code ---------------------*/

typedef struct ATimerService ATimerService;

/* const part of ActorClass (ROM) */
typedef struct ATimerService_const {
	#ifdef ET_MSC_LOGGER_ACTIVATE
		const char* instName;
	#endif
	
	/* simple ports */

	/* data receive ports */

	/* saps */

	/* replicated ports */

	/* services */
	const etReplPort timer;
	const etReplPort supervisionControl;
} ATimerService_const;


/* constant for state machine data */
#define ATIMERSERVICE_HISTORY_SIZE 2

/* variable part of ActorClass (RAM) */
struct ATimerService {
	const ATimerService_const* ET_CONST_MEMBER constData;

	/* data send ports */

	/*--------------------- attributes ---------------------*/
	 etTimerControlBlock* usedTcbsRoot;
	 etTime timerDeviationHighWaterMark;


	/* state machine variables */
	etInt16 state;
	etInt16 history[ATIMERSERVICE_HISTORY_SIZE];
};

void ATimerService_init(ATimerService* self);

void ATimerService_receiveMessage(void* self, const void* ifitem, const etMessage* msg);

void ATimerService_execute(ATimerService* self);

/*--------------------- user constructor/destructor ---------------------*/

/*--------------------- operations ---------------------*/
 void ATimerService_putTcbToUsedList(ATimerService* self, etTimerControlBlock* block);
 void ATimerService_queueTcb(ATimerService* self, void* ifitem, DStartTimer* startTimer, bool periodic);
 void ATimerService_getTime(ATimerService* self, etTime* t);
 void ATimerService_removeTcbFromUsedList(ATimerService* self, int32 idx);


#endif /* _ETRICE_API_TIMER_ATIMERSERVICE_H_ */

